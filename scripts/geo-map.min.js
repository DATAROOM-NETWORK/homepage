import*as e from"https://api.mapbox.com/mapbox-gl-js/v2.9.2/mapbox-gl.js";import*as t from"https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.min.js";var o,n,i,r,a,s,l,c,d,u,p,h,m,g,b={989:(e,t,o)=>{o.d(t,{Z:()=>s});var n=o(81),i=o.n(n),r=o(645),a=o.n(r)()(i());a.push([e.id,"@import url(https://api.mapbox.com/mapbox-gl-js/v2.2.0/mapbox-gl.css);"]),a.push([e.id,"@import url(https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css);"]),a.push([e.id,":root {\n  --geo-map-background-color: #FFFFFF;\n  --geo-map-foreground-color: #000000;\n  --geo-map-border-color: #2d2d2d;\n  --geo-map-secondary-background-color: #000000;\n  --geo-map-secondary-foreground-color: #ffffff;\n  --column-footer-height: 1em;\n  --column-footer-offset: 1em;\n  --column-header-size: 1em;\n  --column-text-color: black;\n  --column-background-color: transparent;\n}\n\ngeo-map {\n  opacity: 0;\n  margin:0;\n  display:block;\n  width:100vw;\n  height:100vh;\n  background-color:transparent;\n  transition: opacity 0.5s ease-in;\n}\n\ngeo-map map-container {\n  position: absolute;\n  display:block;\n  left: 0pt;\n  top: 0pt;\n  width: 100%;\n  height: 100%;\n}\n\n.far .near, .middle .near {\n  display: none;\n}\n\n.far .middle, .far .near {\n  display: none;\n}\n\n.middle .far, .middle .near {\n  display: none;\n}\n",""]);const s=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var o="",n=void 0!==t[5];return t[4]&&(o+="@supports (".concat(t[4],") {")),t[2]&&(o+="@media ".concat(t[2]," {")),n&&(o+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),o+=e(t),n&&(o+="}"),t[2]&&(o+="}"),t[4]&&(o+="}"),o})).join("")},t.i=function(e,o,n,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);n&&a[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),o&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=o):d[2]=o),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},81:e=>{e.exports=function(e){return e[1]}},379:e=>{var t=[];function o(e){for(var o=-1,n=0;n<t.length;n++)if(t[n].identifier===e){o=n;break}return o}function n(e,n){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],c=n.base?l[0]+n.base:l[0],d=r[c]||0,u="".concat(c," ").concat(d);r[c]=d+1;var p=o(u),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var m=i(h,n);n.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function i(e,t){var o=t.domAPI(t);return o.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;o.update(e=t)}else o.remove()}}e.exports=function(e,i){var r=n(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=o(r[a]);t[s].references--}for(var l=n(e,i),c=0;c<r.length;c++){var d=o(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=l}}},569:e=>{var t={};e.exports=function(e,o){var n=function(e){if(void 0===t[e]){var o=document.querySelector(e);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}t[e]=o}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(o)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,o)=>{e.exports=function(e){var t=o.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(o){!function(e,t,o){var n="";o.supports&&(n+="@supports (".concat(o.supports,") {")),o.media&&(n+="@media ".concat(o.media," {"));var i=void 0!==o.layer;i&&(n+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),n+=o.css,i&&(n+="}"),o.media&&(n+="}"),o.supports&&(n+="}");var r=o.sourceMap;r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,o)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},y={};function f(e){var t=y[e];if(void 0!==t)return t.exports;var o=y[e]={id:e,exports:{}};return b[e](o,o.exports,f),o.exports}f.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return f.d(t,{a:t}),t},f.d=(e,t)=>{for(var o in t)f.o(t,o)&&!f.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},f.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),f.nc=void 0,(()=>{f.d({},{}),f.d({},{});class e extends HTMLElement{constructor(){if(super(),"undefined"==typeof mapboxgl)return console.error("Geo Map component requires Mapbox to work");const e=((e=window.location.href)=>{const t=new URLSearchParams(e);let o={};for(const[e,n]of t)if(e!==window.location.origin+window.location.pathname+"?")try{const t=JSON.parse(decodeURI(n));o[e]=t}catch{o[e]=decodeURI(n)}return o})();if(this.access_token=this.getAttribute("accesstoken"),null===this.access_token)return console.error("Geo Map component requires a MapBox access token");this.removeAttribute("accesstoken"),mapboxgl.accessToken=this.access_token,this.style=getComputedStyle(this),this.styleurl=this.getAttribute("styleurl"),null!==this.styleurl&&""!==this.styleurl||(console.warn("could not find style url, using the default"),this.styleurl="mapbox://styles/mapbox/streets-v11"),this.removeAttribute("styleurl"),this.latitude=this.getAttribute("latitude"),null===this.latitude&&(this.latitude=0),this.latitude=e.latitude?e.latitude:this.latitude,this.longitude=this.getAttribute("longitude"),null===this.longitude&&(this.longitude=0),this.longitude=e.longitude?e.longitude:this.longitude,this.zoom=this.getAttribute("zoom"),null===this.zoom&&(this.zoom=1),this.zoom=e.zoom?e.zoom:this.zoom,this.bearing=this.getAttribute("bearing"),null===this.bearing&&(this.bearing=0),this.bearing=e.bearing?e.bearing:this.bearing,this.pitch=this.getAttribute("pitch"),null===this.pitch&&(this.pitch=0),this.pitch=e.pitch?e.pitch:this.pitch,this.locked=this.getAttribute("locked"),null===this.locked?this.locked=!1:this.locked=!0,this.navigation_control=this.getAttribute("navigation-control"),null===this.navigation_control&&(this.navigation_control=!1),this.slideshow=this.getAttribute("slideshow")}showLayer(e){const t=this.map.getLayoutProperty(e,"visibility");void 0!==t&&"none"===t&&this.map.setLayoutProperty(e,"visibility","visible")}hideLayer(e){var t=this.map.getLayoutProperty(e,"visibility");void 0!==t&&"none"!==t&&this.map.setLayoutProperty(e,"visibility","none")}getLayer(e){return this.map.getLayer(e)||console.error("Layer not found.")}getLayers(){const e=["background","satellite","tunnel-minor-case","tunnel-street-case","tunnel-minor-link-case","tunnel-secondary-tertiary-case","tunnel-primary-case","tunnel-major-link-case","tunnel-motorway-trunk-case","tunnel-path","tunnel-steps","tunnel-pedestrian","tunnel-minor","tunnel-minor-link","tunnel-major-link","tunnel-street","tunnel-street-low","tunnel-secondary-tertiary","tunnel-primary","tunnel-motorway-trunk","road-path","road-steps","road-pedestrian","road-minor-case","road-street-case","road-minor-link-case","road-secondary-tertiary-case","road-primary-case","road-major-link-case","road-motorway-trunk-case","road-minor","road-minor-link","road-major-link","road-street","road-street-low","road-secondary-tertiary","road-primary","road-motorway-trunk","bridge-path","bridge-steps","bridge-pedestrian","bridge-minor-case","bridge-street-case","bridge-minor-link-case","bridge-secondary-tertiary-case","bridge-primary-case","bridge-major-link-case","bridge-motorway-trunk-case","bridge-minor","bridge-minor-link","bridge-major-link","bridge-street","bridge-street-low","bridge-secondary-tertiary","bridge-primary","bridge-motorway-trunk","bridge-major-link-2-case","bridge-motorway-trunk-2-case","bridge-major-link-2","bridge-motorway-trunk-2","aerialway","admin-1-boundary-bg","admin-0-boundary-bg","admin-1-boundary","admin-0-boundary","admin-0-boundary-disputed","road-label","road-intersection","road-number-shield","road-exit-shield","path-pedestrian-label","ferry-aerialway-label","waterway-label","natural-line-label","natural-point-label","water-line-label","water-point-label","poi-label","transit-label","airport-label","settlement-subdivision-label","settlement-minor-label","settlement-major-label","state-label","country-label","continent-label","tunnel-oneway-arrow-blue","tunnel-oneway-arrow-white","road-oneway-arrow-blue","road-oneway-arrow-white","bridge-oneway-arrow-blue","bridge-oneway-arrow-white","buildingswithid","nearby-roofs","building","council-wide","council-wide-query","council-wide-borders"],t=this.map.getStyle().layers;let o=[];return t.forEach((function(t){e.indexOf(t.id)<0&&o.push(t.id)})),o}getGeoJSON(e,t){this.style.color.length<1&&(this.style.color="#F00"),fetch(e).then((function(e){return e.json()})).then((e=>{this.map.addSource("geojson-data",{type:"geojson",data:e}),this.map.addLayer({id:"geojson-layer",type:"circle",source:"geojson-data",paint:{"circle-radius":{property:t,type:"exponential",stops:[[0,2],[10,20]]},"circle-color":this.style.color,"circle-opacity":.5}}),this.showLayer("geojson-layer"),this.dispatchEvent(new CustomEvent("GEO JSON LOADED",{detail:{data:e}}))})).catch((function(e){console.log("Error fetching GeoJSON:",e)}))}connectedCallback(){var e;e=()=>this.initialize(),"complete"===document.readyState?e(event):document.addEventListener("DOMContentLoaded",e)}async initialize(){const e=document.createElement("map-container");this.appendChild(e),this.map=await new mapboxgl.Map({container:e,style:this.styleurl,center:[this.longitude,this.latitude],zoom:this.zoom,bearing:this.bearing,projection:"globe",pitch:this.pitch,interactive:!this.locked}),this.initialized=!0,this.map.on("load",(()=>{this.mapLoaded()}))}initializeGeoCoder(){let e=this.getAttribute("search-bounds");null!==e&&(e=e.split(",").map((e=>Number(e.trim()))));const t=new MapboxGeocoder({accessToken:mapboxgl.accessToken,mapboxgl,zoom:18,marker:!1,bbox:e,placeholder:"Search for an Address"});this.map.addControl(t)}initializeGeoLocate(){const e=new mapboxgl.GeolocateControl({showAccuracy:!1,showUserLocation:!1});this.map.addControl(e)}initializeNavigationControl(){const e=new mapboxgl.NavigationControl({visualizePitch:!0});this.map.addControl(e)}handleMoveEnd(e){let t=this.map.getCenter();const o=this.map.getBounds(),n=this.map.getZoom();this.handleZoom(n),this.dispatchEvent(new CustomEvent("MAP MOVED",{detail:{coords:t,bounds:o,zoom:n}}))}handleZoom(e=0){let t=15,o=10;const n=this.getAttribute("zoom-breakpoints");null!==n&&([t,o]=n.split(",").map((e=>Number(e)))),e<o?(this.classList.add("far"),this.classList.remove("middle"),this.classList.remove("near")):e>=o&&e<=t?(this.classList.add("middle"),this.classList.remove("far"),this.classList.remove("near")):(this.classList.add("near"),this.classList.remove("middle"),this.classList.remove("far"))}showPopup(e){new mapboxgl.Popup({closeOnClick:!1,closeOnMove:!0,offset:{bottom:[-60,-10]}}).setLngLat(geo_map.map.getCenter()).setHTML(e).addTo(this.map)}mapLoaded(){if(null!==this.geocoder){if("undefined"==typeof MapboxGeocoder)return void(this.innerHTML="If you would like to use the geocoder element, \n        you must include the geocoder plugin in your HTML: \n        https://docs.mapbox.com/mapbox-gl-js/example/mapbox-gl-geocoder/");this.initializeGeoCoder()}this.geolocate_attribute=this.getAttribute("geolocate"),null!==this.geolocate_attribute&&this.initializeGeoLocate(),this.navigation_control&&this.initializeNavigationControl(),this.map.on("moveend",(e=>{this.handleMoveEnd(e)})),this.map.on("click",(e=>{this.map.flyTo({center:e.lngLat,zoom:18.5})}));const e=this.querySelector("geo-json");if(null!==e){const t=e.getAttribute("src"),o=e.getAttribute("variable");this.getGeoJSON(t,o)}this.style.opacity=1,this.handleZoom(this.zoom),this.dispatchEvent(new Event("GEO MAP LOADED"))}}customElements.define("geo-map",e)})(),o=f(379),n=f.n(o),i=f(795),r=f.n(i),a=f(569),s=f.n(a),l=f(565),c=f.n(l),d=f(216),u=f.n(d),p=f(589),h=f.n(p),m=f(989),(g={}).styleTagTransform=h(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=u(),n()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;